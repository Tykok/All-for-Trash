<?php

/**
 * Classe dépôt, qui représente l'ensemble des dépôts déclarer par un utilisateur.
Un dépôt à été signaler par UN utilisateur,
 et approuver ou non par PLUSIEURS utilisateurs si c'est le cas
Possède PLUSIEURS commentaires
Un dépôt peut avoir PLUSIEURS déchets
Un dépôt correspond à UN lieu
 * Code skeleton generated by dia-uml2php5 plugin
 * written by KDO kdo@zpmag.com
 */

class Depot
{

	/**
	 * 
	 * @var int
	 * @access private
	 */
	private  $id_signalement;

	/**
	 * 
	 * @var string
	 * @access private
	 */
	private  $name;

	/**
	 * 
	 * @var string
	 * @access private
	 */
	private  $longitude;

	/**
	 * 
	 * @var string
	 * @access private
	 */
	private  $latitude;

	/**
	 * 
	 * @var string
	 * @access private
	 */
	private  $description;

	/**
	 * 
	 * @var date
	 * @access private
	 */
	private  $reported_at;

	/**
	 * 
	 * @var boolean
	 * @access private
	 */
	private  $nettoyer;

	/**
	 * Contient l'ensemble des déchets présents sur le dépôts signalé par un utilisateur
	 * @var array
	 * @access private
	 */
	private  $collection_Trash;

	/**
	 * Le user ayant signaler le dépôt
	 * @var User
	 * @access private
	 */
	private  $leUser;

	/**
	 * L'objet lieu de la classe Lieu sur lequel ce trouve le dépôt
	 * @var Lieu
	 * @access private
	 */
	private  $leLieu;

	/**
	 * Collection des commentaires effectué sur ce dépôt
	 * @var Commentaire
	 * @access private
	 */
	private  $Collection_Commentaires;

	/**
	 * Dictionnaire des users ayant approuvé ou non l'existence de ce dépôt
	 * @var Array
	 * @access private
	 */
	private  $Dictionnaire_User_Approuved;


	/**
	 * Simple constructeur de la classe Depot
	 *
	 * @param int $id_signalement
	 * @param string $name
	 * @param string $longitude
	 * @param string $latitude
	 * @param string $description
	 * @param date $reported_at
	 * @param boolean $nettoyer VRAI le dépôt est propre / FAUX Le dépôt ne l'est pas
	 * @param boolean $charger_tout Permet de savoir si le dépôt doit être chargé TOTALEMENT ou PARTIELLEMENT
	 */
	public function __construct(
		$id_signalement,
		$name,
		$longitude,
		$latitude,
		$description,
		$reported_at,
		$nettoyer,
		$charger_tout = false
	) {

		// On récupére déjà les informations de bases de notre dépôt
		$id_signalement = $id_signalement;
		$name = $name;
		$longitude = $longitude;
		$latitude = $latitude;
		$description = $description;
		$reported_at = $reported_at;
		$nettoyer = $nettoyer;

		// On récupére tout d'abord le USER
		$leUser = null;

		// Puis ensuite le LIEU en relation 
		$leLieu = null;


		// Ensuite si l'ensemble des informations doit être chargé, alors on charge les collections du dépôt
		if ($charger_tout) {
			$collection_Trash = null;
			$Collection_Commentaires = null;
			$Dictionnaire_User_Approuved = null;
		} else {
			$collection_Trash = array();
			$Collection_Commentaires = array();
			$Dictionnaire_User_Approuved = array();
		}
	}


	/**
	DEBUT Fonction GET et SET
	 ****************************************************************************************************************************************
	 ********************************************************************************************************************************
	 ************************************************************************************************************************************
	 */
	public function get_id_signalement()
	{
		return $this->id_signalement;
	}
	public function get_name()
	{
		return $this->name;
	}
	public function get_longitude()
	{
		return $this->longitude;
	}
	public function get_latitude()
	{
		return $this->latitude;
	}
	public function get_description()
	{
		return $this->description;
	}
	public function get_reported_at()
	{
		return $this->reported_at;
	}
	public function get_nettoyer()
	{
		return $this->nettoyer;
	}
	public function get_charger_tout()
	{
		return $this->charger_tout;
	}

	public function set_id_signalement($value)
	{
		$this->id_signalement = $value;
	}
	public function set_name($value)
	{
		$this->name = $value;
	}
	public function set_longitude($value)
	{
		$this->longitude = $value;
	}
	public function set_latitude($value)
	{
		$this->latitude = $value;
	}
	public function set_description($value)
	{
		$this->description = $value;
	}
	public function set_reported_at($value)
	{
		$this->reported_at = $value;
	}
	public function set_nettoyer($value)
	{
		$this->nettoyer = $value;
	}
	public function set_charger_tout($value)
	{
		$this->charger_tout = $value;
	}


	// Cette fonction ne peut que retourner le User, un autre user ne peut pas avoir signalé le dépôt déjà signaler par un autre user donc pas de set
	public function get_leUser()
	{
		return $this->leUser;
	}

	// Le lieu ne sera pas amener à changer, donc seulement une fonction get
	public function get_leLieu()
	{
		return $this->leLieu;
	}

	// Fonction pour récupérer les collections
	public function get_collection_Trash()
	{
		return $this->collection_Trash;
	}
	public function get_Collection_Commentaires()
	{
		return $this->Collection_Commentaires;
	}
	public function get_Dictionnaire_User_Approuved()
	{
		return $this->Dictionnaire_User_Approuved;
	}

	/**
	 ****************************************************************************************************************************************
	 ********************************************************************************************************************************
	 ************************************************************************************************************************************
	 	FIN Fonction GET et SET
	 */
}
